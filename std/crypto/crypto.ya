import std.io
import std.hash


fn RegisterHash  (h: Hash, f: fn () : hash.Hash) : () { EXT }

extend (self: Hash) {

fn Available  () : bool { EXT }

fn HashFunc  () : Hash { EXT }

fn New  () : hash.Hash { EXT }

fn Size  () : int { EXT }

fn String  () : string { EXT }

}

struct DecrypterOpts(any)

struct Hash(uint)

struct PrivateKey(any)

struct PublicKey(any)

trait Decrypter {

  fn Public () : PublicKey
  fn Decrypt (rand: io.Reader, msg: [byte], opts: DecrypterOpts) : Result<[byte]>
}

trait Signer {

  fn Public () : PublicKey
  fn Sign (rand: io.Reader, digest: [byte], opts: SignerOpts) : Result<[byte]>
}

trait SignerOpts {

  fn HashFunc () : Hash
}